//
//  TrackMetadataListTracksTest.m
//
//  Generated by JSON Model Generator v0.0.2 on Tue Jan 13 16:44:21 MST 2015.
//    https://github.com/intere/generator-json-models
//
//    The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
//
//

#import <XCTest/XCTest.h>
#import "TrackMetadataListTracks.h"
#import "Serializer.h"

@interface TrackMetadataListTracksTest : XCTestCase{
	NSString *sampleJson;
	TrackMetadataListTracks *deserialized;
}
@end

#define DATE_LONG 1411065116782
#define DATE_ISO @"2014-09-18T11:31:56.782-07:00"
#define DATE_ZULU @"2014-09-18T11:31:56.782Z"
#define TEST_KEY @"date"

@implementation TrackMetadataListTracksTest

- (void)setUp
{
	[super setUp];
	NSString *pathToResource = [[NSBundle bundleForClass:self.class] pathForResource:@"track_metadata_list_tracks" ofType:@"json"];
	NSError *error = nil;
	sampleJson = [NSString stringWithContentsOfFile:pathToResource encoding:NSUTF8StringEncoding error:&error];
	if(error) {
		XCTFail(@"Failed to load file: contests.json: %@", error.localizedDescription);
	}
	NSDictionary *dict = [Serializer fromJsonString:sampleJson];
	deserialized = [TrackMetadataListTracks fromDictionary:dict];
	XCTAssertNotNil(deserialized, @"The TrackMetadataListTracks failed to deserialize properly");
}

- (void)tearDown
{
    // Put teardown code here; it will be run once, after the last test case.
    [super tearDown];
}

-(void)testCalories {
	XCTAssertEqual((NSInteger)0, deserialized.calories, @"Failed to properly deserialize the calories");
}

-(void)testDeserializedateAsLongDate {
	NSDictionary *dict = [self createDictionaryWithObject:[NSNumber numberWithLongLong:DATE_LONG]];
	NSDate *date = [Serializer getDateFromDict:dict forKey:TEST_KEY orDefaultTo:nil];
	XCTAssertNotNil(date, @"The Serializer did not deserialize the date correctly");
}

-(void)testSerializedateAsIsoDate {
	NSString *formattedDate = [self formatIsoDateToString:DATE_ISO];
	NSDate *toSerialize = [self formatIsoDateToDate:formattedDate];
	NSMutableDictionary *dict = [[NSMutableDictionary alloc]init];
	NSString *key = @"date";
	[Serializer setDict:dict dateValue:toSerialize forKey:key];
	XCTAssertNotNil([dict objectForKey:key], @"The Serializer failed to set the date for key: %@", key);
	XCTAssertTrue([[dict objectForKey:key] isKindOfClass:[NSString class]], @"We're not even getting an NSString back...");
	NSDate *date = [Serializer getDateFromDict:dict forKey:key orDefaultTo:nil];
	NSString *fromDate = [self formatDateToIsoString:date];
	
	XCTAssertEqualObjects(fromDate, formattedDate, @"The Serialization of the date failed");
}

-(void)testDeserializedateAsZuluDate {
	NSString *formattedDate = [self formatZuluDateToString:DATE_ZULU];
	NSDate *toSerialize = [self formatZuluDateToDate:formattedDate];
	NSMutableDictionary *dict = [[NSMutableDictionary alloc]init];
	NSString *key = @"date";
	[Serializer setDict:dict dateValue:toSerialize forKey:key];
	XCTAssertNotNil([dict objectForKey:key], @"The Serializer failed to set the date for key: %@", key);
	XCTAssertTrue([[dict objectForKey:key] isKindOfClass:[NSString class]], @"We're not even getting an NSString back...");
	NSDate *date = [Serializer getDateFromDict:dict forKey:key orDefaultTo:nil];
	NSString *fromDate = [self formatDateToZuluString:date];
	
	XCTAssertEqualObjects(fromDate, formattedDate, @"The Serialization of the date failed");
}

-(void)testDistance {
	XCTAssertEqualWithAccuracy(2858.448769637801, deserialized.distance, 0.01, @"Failed to properly deserialize the distance");
}

-(void)testDuration {
	XCTAssertEqual((NSInteger)3245, deserialized.duration, @"Failed to properly deserialize the duration");
}

-(void)testFile {
	XCTAssertEqualObjects(@"Track_2014-09-06 19:19:53 +0000.json", deserialized.file, @"Failed to properly deserialize the file");
}

-(void)testTheId {
	XCTAssertEqualObjects(@"540b6e912cdcae7412dde84c", deserialized.theId, @"Failed to properly deserialize the theId");
}

-(void)testMaxAlt {
	XCTAssertEqualWithAccuracy(2683.173425674438, deserialized.maxAlt, 0.01, @"Failed to properly deserialize the maxAlt");
}

-(void)testMetadataId {
	XCTAssertEqualObjects(@"def456", deserialized.metadataId, @"Failed to properly deserialize the metadataId");
}

-(void)testMinAlt {
	XCTAssertEqualWithAccuracy(2670.651941299438, deserialized.minAlt, 0.01, @"Failed to properly deserialize the minAlt");
}

-(void)testName {
	XCTAssertEqualObjects(@"Winter Park Skate Park", deserialized.name, @"Failed to properly deserialize the name");
}

-(void)testRuns {
	XCTAssertEqual((NSInteger)1, deserialized.runs, @"Failed to properly deserialize the runs");
}

-(void)testSpeed {
	XCTAssertEqualWithAccuracy(18.02419362432899, deserialized.speed, 0.01, @"Failed to properly deserialize the speed");
}

-(void)testVertInMeters {
	XCTAssertEqualWithAccuracy(0.5029296875, deserialized.vertInMeters, 0.01, @"Failed to properly deserialize the vertInMeters");
}

-(void)testVertDistance {
	XCTAssertEqualWithAccuracy(2858.448769637801, deserialized.vertDistance, 0.01, @"Failed to properly deserialize the vertDistance");
}

-(NSDictionary *)createDictionaryWithObject:(NSObject *)object {
	NSMutableDictionary *dict = [[NSMutableDictionary alloc]init];
	[dict setObject:object forKey:TEST_KEY];
	return dict;
}

-(NSString *)formatZuluDateToString:(NSString *)dateString {
	NSDateFormatter *dateFormat = [NSDateFormatter new];
	dateFormat.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSZ";
	NSDate *parsedDate = [dateFormat dateFromString:DATE_ISO];
	return [dateFormat stringFromDate:parsedDate];
}

-(NSDate *)formatZuluDateToDate:(NSString *)dateString {
	NSDateFormatter *dateFormat = [NSDateFormatter new];
	dateFormat.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSZ";
	return [dateFormat dateFromString:DATE_ISO];
}

-(NSString *)formatDateToZuluString:(NSDate *)date {
	NSDateFormatter *dateFormat = [NSDateFormatter new];
	dateFormat.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSZ";
	return [dateFormat stringFromDate:date];
}

-(NSString *)formatIsoDateToString:(NSString *)dateString {
	NSDateFormatter *dateFormat = [NSDateFormatter new];
	dateFormat.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSXXX";
	NSDate *parsedDate = [dateFormat dateFromString:DATE_ISO];
	return [dateFormat stringFromDate:parsedDate];
}

-(NSDate *)formatIsoDateToDate:(NSString *)dateString {
	NSDateFormatter *dateFormat = [NSDateFormatter new];
	dateFormat.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSXXX";
	return [dateFormat dateFromString:DATE_ISO];
}

-(NSString *)formatDateToIsoString:(NSDate *)date {
	NSDateFormatter *dateFormat = [NSDateFormatter new];
	dateFormat.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSXXX";
	return [dateFormat stringFromDate:date];
}
@end
