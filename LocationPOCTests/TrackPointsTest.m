//
//  TrackPointsTest.m
//
//  Generated by JSON Model Generator v0.0.2 on Sun Dec 28 07:17:18 MST 2014.
//    https://github.com/intere/generator-json-models
//
//    The generator tool is licensed under the LGPL: http://www.gnu.org/licenses/lgpl-3.0.html#content
//
//

#import <XCTest/XCTest.h>
#import "TrackPoints.h"
#import "Serializer.h"

@interface TrackPointsTest : XCTestCase{
	NSString *sampleJson;
	TrackPoints *deserialized;
}
@end

#define DATE_LONG 1411065116782
#define DATE_ISO @"2014-09-18T11:31:56.782-07:00"
#define DATE_ZULU @"2014-09-18T11:31:56.782Z"
#define TEST_KEY @"date"

@implementation TrackPointsTest

- (void)setUp
{
	[super setUp];
	NSString *pathToResource = [[NSBundle bundleForClass:self.class] pathForResource:@"track_points" ofType:@"json"];
	NSError *error = nil;
	sampleJson = [NSString stringWithContentsOfFile:pathToResource encoding:NSUTF8StringEncoding error:&error];
	if(error) {
		XCTFail(@"Failed to load file: contests.json: %@", error.localizedDescription);
	}
	NSDictionary *dict = [Serializer fromJsonString:sampleJson];
	deserialized = [TrackPoints fromDictionary:dict];
	XCTAssertNotNil(deserialized, @"The TrackPoints failed to deserialize properly");
}

- (void)tearDown
{
    // Put teardown code here; it will be run once, after the last test case.
    [super tearDown];
}

-(void)testAlt {
	XCTAssertEqualWithAccuracy(2788.198328018188, deserialized.alt, 0.01, @"Failed to properly deserialize the alt");
}

-(void)testDist {
	XCTAssertEqual((NSInteger)0, deserialized.dist, @"Failed to properly deserialize the dist");
}

-(void)testHAcc {
	XCTAssertEqual((NSInteger)5, deserialized.hAcc, @"Failed to properly deserialize the hAcc");
}

-(void)testLat {
	XCTAssertEqualWithAccuracy(39.88531880550076, deserialized.lat, 0.01, @"Failed to properly deserialize the lat");
}

-(void)testLon {
	XCTAssertEqualWithAccuracy(-105.76367237615, deserialized.lon, 0.01, @"Failed to properly deserialize the lon");
}

-(void)testSpeed {
	XCTAssertEqualWithAccuracy(2.890000104904175, deserialized.speed, 0.01, @"Failed to properly deserialize the speed");
}

-(void)testTime {
	XCTAssertEqualWithAccuracy(1.41969623242048E12, deserialized.time, 0.01, @"Failed to properly deserialize the time");
}

-(void)testVAcc {
	XCTAssertEqual((NSInteger)6, deserialized.vAcc, @"Failed to properly deserialize the vAcc");
}

@end
